[
    {
        "id": "54e00243c63a0667",
        "type": "tab",
        "label": "Formularios1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5f79bf4a4f4f3f36",
        "type": "group",
        "z": "54e00243c63a0667",
        "name": "uibuilder simple form example \\n ",
        "style": {
            "fill": "#dbcbe7",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7c8adbf5b52fc611",
            "618c5774773d9086",
            "dea4924479704c6e",
            "75e04dbce19bc0e1",
            "fd14560e7aa0f275",
            "472ff48730d1b698",
            "32f6056e316798bf",
            "363f0c47148e997e",
            "3b043396fab746f0",
            "65dffaaedb01010f",
            "547480bf4e42deec",
            "39275f4aa00e9d59"
        ],
        "x": 34,
        "y": 43,
        "w": 782,
        "h": 258
    },
    {
        "id": "75e04dbce19bc0e1",
        "type": "junction",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "7c8adbf5b52fc611"
            ]
        ]
    },
    {
        "id": "363f0c47148e997e",
        "type": "junction",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "x": 720,
        "y": 200,
        "wires": [
            [
                "618c5774773d9086"
            ]
        ]
    },
    {
        "id": "39275f4aa00e9d59",
        "type": "junction",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "x": 700,
        "y": 140,
        "wires": [
            [
                "547480bf4e42deec",
                "90c07f0704d06f7d"
            ]
        ]
    },
    {
        "id": "618c5774773d9086",
        "type": "debug",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "uibuilder control output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 755,
        "y": 260,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "dea4924479704c6e",
        "type": "link in",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "uib-client-tests-uncached",
        "links": [
            "16010315c365626a",
            "1d1f5b0d55f6a646",
            "4ce1fc8c40ccbf7d",
            "81158a3cb7a12342",
            "b7f66bb3aee49f18",
            "1c433aa390e1bc8c",
            "278d2031ac38b84a",
            "756993c325791499",
            "cd89e56d548536d4",
            "948afbc2b3902c35"
        ],
        "x": 205,
        "y": 160,
        "wires": [
            [
                "75e04dbce19bc0e1"
            ]
        ]
    },
    {
        "id": "472ff48730d1b698",
        "type": "link in",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "uib-client-tests-cached",
        "links": [
            "32f6056e316798bf",
            "16cdac4094403b45",
            "1c433aa390e1bc8c",
            "976a7e804093ea33"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "fd14560e7aa0f275"
            ]
        ]
    },
    {
        "id": "32f6056e316798bf",
        "type": "link out",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "client-tests-control-outputs",
        "mode": "link",
        "links": [
            "472ff48730d1b698"
        ],
        "x": 645,
        "y": 260,
        "wires": [],
        "info": "Sends control messages back to the cache input\r\n\r\nThis ensures that when new clients (browser\r\ntabs) connect or if a page is reloaded, \r\nthe browser gets the cached data automatically.\r\n\r\nYou could filter this output to only include\r\n\"client connect\" messages if you wanted to \r\nimprove efficiency when you expect lots of \r\nclients to connect."
    },
    {
        "id": "3b043396fab746f0",
        "type": "inject",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "Clear Cache",
        "props": [
            {
                "p": "uibuilderCtrl",
                "v": "clear cache",
                "vt": "str"
            },
            {
                "p": "cacheControl",
                "v": "CLEAR",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "fd14560e7aa0f275"
            ]
        ]
    },
    {
        "id": "65dffaaedb01010f",
        "type": "inject",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "75e04dbce19bc0e1"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "75aeb431c2cbdb1a",
        "type": "comment",
        "z": "54e00243c63a0667",
        "name": "Example Form Data",
        "info": "```json\n[\n    {\n        \"id\": \"r1\",\n        \"type\": \"text\",\n        \"required\": false,\n        \"label\": \"Text Input:\",\n        \"value\": \"Foo\"\n    },\n    {\n        \"id\": \"r2\",\n        \"type\": \"color\",\n        \"required\": false,\n        \"label\": \"Colour:\",\n        \"value\": \"#427798\"\n    },\n    {\n        \"id\": \"r3\",\n        \"type\": \"date\",\n        \"required\": true,\n        \"label\": \"Date:\"\n    },\n    {\n        \"id\": \"r4\",\n        \"type\": \"range\",\n        \"required\": false,\n        \"label\": \"Range (0-100):\",\n        \"value\": \"20\",\n        \"min\": 0,\n        \"max\": 100\n    },\n    {\n        \"id\": \"r5\",\n        \"type\": \"button\",\n        \"label\": \"Send to Node-RED\",\n        \"value\": \"Buttons can have values as well\"\n    }\n]\n```",
        "x": 150,
        "y": 320,
        "wires": []
    },
    {
        "id": "fd14560e7aa0f275",
        "type": "uib-cache",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "cacheall": false,
        "cacheKey": "topic",
        "newcache": true,
        "num": 1,
        "storeName": "memory",
        "name": "Cache",
        "storeContext": "context",
        "varName": "uib_cache",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "7c8adbf5b52fc611"
            ]
        ],
        "info": "Cache inputs based on the msg.topic.\r\n\r\nJust the last msg is kept for each\r\ntopic.\r\n\r\nDefault context store is used in this\r\nexample since not everyone will have\r\ndefined a file-based store.\r\n\r\nThat means that if you want an initial\r\nzero-code layout, you need to trigger\r\nits sending from a trigger node that\r\nfires when Node-RED (re)starts."
    },
    {
        "id": "7c8adbf5b52fc611",
        "type": "uibuilder",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "",
        "topic": "",
        "url": "simple-form",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.4.1",
        "showMsgUib": true,
        "x": 520,
        "y": 180,
        "wires": [
            [
                "39275f4aa00e9d59"
            ],
            [
                "32f6056e316798bf",
                "363f0c47148e997e"
            ]
        ],
        "info": "This example uses a blank template with\r\nthe IIFE build of the front-end client.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript.\r\n\r\nThe IIFE build should be included using a link\r\ntag in your HTML."
    },
    {
        "id": "547480bf4e42deec",
        "type": "debug",
        "z": "54e00243c63a0667",
        "g": "5f79bf4a4f4f3f36",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 725,
        "y": 100,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "bc7fb2f8e45d894f",
        "type": "mongodb-aleph-in",
        "z": "54e00243c63a0667",
        "mongodb": "121130e81abf7d91",
        "name": "",
        "collection": "Test5",
        "operation": "find",
        "x": 1430,
        "y": 220,
        "wires": [
            [
                "9633224133bcd202"
            ]
        ]
    },
    {
        "id": "9633224133bcd202",
        "type": "ui_template",
        "z": "54e00243c63a0667",
        "group": "9458c1e8db283730",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<html>\n    <head></head>\n    <style>\n        img {\n            width: 400px;\n            height: 225px; \n            display: block; \n            margin-left: auto; \n            margin-right: auto;\n        }\n        table,\n        th,\n        td {\n        border: 1px solid black;\n        }\n        \n        table.fixed {\n        table-layout: fixed;\n        }\n        table.fixed td {\n        overflow: hidden;\n        }\n        .datos{\n            text-align: center; \n            font-size: 1.2em; \n        }\n\n        hr {\n            border-width: 3px; \n            color:#000; \n        }\n        td {\n            margin-left: auto;\n            margin-right: auto;\n            text-align: center;  \n        }\n        \n    \n    </style>\n    <body>\n        <br> \n        <br>\n        <br>\n        <ul>\n            <li class=\"datos\"><b>Número de filas {{msg.payload.length}}</b></li>\n        </ul>\n        <br>\n        <br>\n        <br>\n        <table>\n            <tr>\n                <th>ID</th>\n                <th>Fecha</th>\n                <th>Hora</th>\n                <th>Sensor</th>\n                <th>Imagen</th>\n            <tr>\n            <tr ng-repeat=\"x in msg.payload\">\n                <td>{{x.payload.cid}}</td>\n                <td>{{x.payload.fecha}}</td>\n                <td>{{x.payload.hora}}</td>\n                <td>{{x.payload.sensor}}</td>\n                <td><img alt=\"Camera Snapshot\" src=\"data:image/jpg;base64,{{x.payload.imagen}}\"/></td>\n\n            </tr>\n        <table>\n\n    </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1740,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "626c766581eb2b28",
        "type": "function",
        "z": "54e00243c63a0667",
        "name": "Save_Events",
        "func": "var dashboardLog = flow.get('dashboardLog') || []; \n// dashboard_log could be named in any way you like\nif (dashboardLog.length > 20) {\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n}\n//program what the node does inside in here\nif(msg.payload != null){\n    dashboardLog.push(msg.payload);\n}\n\n\n// store the value back\nflow.set('dashboardLog', dashboardLog);\n\n// make it part of the outgoing msg object\nvar msg1 = {};\nmsg1.payload = dashboardLog;\nvar msg2 = {payload: msg.payload};\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 100,
        "wires": [
            [
                "b302d4a655371312"
            ],
            [
                "56767edc197e1a6a"
            ]
        ]
    },
    {
        "id": "b302d4a655371312",
        "type": "ui_template",
        "z": "54e00243c63a0667",
        "group": "e73ae5c974de53fa",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\">\n        <font color=\"\">{{x.topic}}</font>\n        <ul>\n            <li>{{x.payload}}</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1220,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "56767edc197e1a6a",
        "type": "function",
        "z": "54e00243c63a0667",
        "name": "SetQuery",
        "func": "var obj = msg.payload;\nvar query = {}\n/*var keyArr = msg.payload.keys(); \nvar cID = \"idVaca\" in keyArr ? msg.payload.idVaca : undefined; \nvar fecha = \"fecha\" in keyArr ? msg.payload.fecha : undefined; \nvar hora = \"hora\" in keyArr ? msg.payload.hora : undefined; \nvar zona = \"zona\" in keyArr ? msg.payload.zona : undefined; \n\n*/\nif(obj != null){\n    var cID = msg.payload.cid;\n    // how do we know that the file will not be undefined\n    var fecha = msg.payload.fecha;\n    var hora = msg.payload.hora;\n    var sensor = msg.payload.sensor;\n\n    if (cID != null && cID != \"\" && cID != \"null\") {\n        //const idform = \"0000000000000000202281xx\"; // string para resto de ID\n        //var lenID = cID.length;\n        /* build logic for ID query */\n        //cID = idform.substring(0, idform.length - lenID) + cID;  \n        //return {payload: {\"payload.1\": cID}};\n        query[\"payload.cid\"] = cID;\n    }\n\n    if (fecha != null && fecha != \"null\" && fecha != \"\") {\n        let parts = fecha.split(\"T\")[0].split(\"-\");\n        var fechaStr = parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\n        query[\"payload.fecha\"] = fechaStr;\n    }\n\n    if (hora != null && hora != \"\" && hora != \"null\") {\n        // see how hora is logged\n        var tmpRegex = {};\n        tmpRegex[\"$regex\"] = \"\" + hora + \":[0-9][0-9]:[0-9][0-9]\"\n        query[\"payload.hora\"] = tmpRegex\n    }\n\n    if (sensor != \"null\") {\n        // agrega la zona\n        var sen = '';\n        switch (msg.payload.sensor) {\n            case 1:\n                query[\"payload.sensor\"] = 'nfc01';\n                break;\n            default:\n                break;\n        }\n    }\n\n    // check if no error was displayed in the form\n\n    msg.payload = query;\n    return msg;\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 140,
        "wires": [
            [
                "bc7fb2f8e45d894f",
                "ed324847e82b53a7"
            ]
        ]
    },
    {
        "id": "7048275101b2aa56",
        "type": "function",
        "z": "54e00243c63a0667",
        "name": "function 1",
        "func": "\nif(msg.payload != null){\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "eb089371e404c922"
            ]
        ]
    },
    {
        "id": "2b9e320c402e9020",
        "type": "debug",
        "z": "54e00243c63a0667",
        "name": "debug 107",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 180,
        "wires": []
    },
    {
        "id": "90c07f0704d06f7d",
        "type": "function",
        "z": "54e00243c63a0667",
        "name": "MSG_Switch",
        "func": "\nif(msg['_ui']['pageName'] == 'index.html'){\n    return [{payload: msg.payload}, {payload: null}]\n}\nif (msg['_ui']['pageName'] == 'formulario2.html') {\n    return [{ payload: null }, { payload: msg.payload }]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 200,
        "wires": [
            [
                "626c766581eb2b28",
                "2b9e320c402e9020"
            ],
            [
                "7048275101b2aa56",
                "7ee442dca31a6cc9"
            ]
        ]
    },
    {
        "id": "ed324847e82b53a7",
        "type": "debug",
        "z": "54e00243c63a0667",
        "name": "debug 108",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 140,
        "wires": []
    },
    {
        "id": "eb089371e404c922",
        "type": "mongodb-aleph-out",
        "z": "54e00243c63a0667",
        "mongodb": "600ad0aa48af0a75",
        "name": "",
        "collection": "PerfilAnimal",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1450,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee442dca31a6cc9",
        "type": "debug",
        "z": "54e00243c63a0667",
        "name": "debug 109",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 420,
        "wires": []
    },
    {
        "id": "121130e81abf7d91",
        "type": "mongodb-aleph-config",
        "hostname": "s23-w4111.1cobx7l.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "CattleCounter",
        "name": ""
    },
    {
        "id": "9458c1e8db283730",
        "type": "ui_group",
        "name": "Tabla Diaria de Animales",
        "tab": "212cf9f606e77e80",
        "order": 1,
        "disp": false,
        "width": "28",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e73ae5c974de53fa",
        "type": "ui_group",
        "name": "Desplegar Datos",
        "tab": "b0873e4e73352fd5",
        "order": 2,
        "disp": true,
        "width": "14",
        "collapse": false,
        "className": ""
    },
    {
        "id": "600ad0aa48af0a75",
        "type": "mongodb-aleph-config",
        "hostname": "s23-w4111.1cobx7l.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "",
        "port": "27017",
        "db": "CattleCounter",
        "name": ""
    },
    {
        "id": "212cf9f606e77e80",
        "type": "ui_tab",
        "name": "Tabla Diaria de Animales",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b0873e4e73352fd5",
        "type": "ui_tab",
        "name": "Log",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]